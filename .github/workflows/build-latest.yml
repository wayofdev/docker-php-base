---

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

env:
  DOCKER_NAMESPACE: wayofdev/php-base
  GHCR_NAMESPACE: ghcr.io/wayofdev/php-base

name: üöÄ Build docker images with latest tag

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os_name: ["alpine"]
        php_version: ["8.1"]
        php_type: ["fpm"]
        builder: [{arch: "amd64", os: "ubuntu-latest"}]
    runs-on: ${{ matrix.builder.os }}
    steps:
      - name: üì¶ Check out the codebase
        uses: actions/checkout@v4

      - name: ü§ñ Generate dist files
        run: make generate

      - name: üê≥ Extract docker meta data
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKER_NAMESPACE }}
            ${{ env.GHCR_NAMESPACE }}
          tags: |
            type=raw,event=branch,value=latest
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          flavor: |
            latest=false
            prefix=${{ matrix.php_version }}-${{ matrix.php_type }}-${{ matrix.os_name }}-

      - name: Rename meta bake definition file
        run: |
          mv "${{ steps.meta.outputs.bake-file }}" "/tmp/bake-meta.json"

      - name: Upload meta bake definition
        uses: actions/upload-artifact@v4
        with:
          name: bake-meta
          path: /tmp/bake-meta.json
          if-no-files-found: error
          retention-days: 1

      - name: üõ†Ô∏è Setup docker BuildX
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: "--debug"

      - name: üîë Login to docker-hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üöÄ Build image and push to docker-hub and GHCR
        id: bake
        uses: docker/bake-action@v3
        with:
          files: |
            ./docker-bake.hcl
            /tmp/bake-meta.json
          set: |
            *.tags=${{ steps.meta.outputs.tags }}
            *.platform=linux/${{ matrix.builder.arch }}
            *.output=type=image,"name=${{ env.DOCKERHUB_SLUG }},${{ env.GHCR_SLUG }}",push-by-digest=true,name-canonical=true,push=${{ github.event_name != 'pull_request' }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ fromJSON(steps.bake.outputs.metadata).image['containerimage.digest'] }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

...
